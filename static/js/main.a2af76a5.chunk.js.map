{"version":3,"sources":["components/cards/MediaCard.jsx","content/content.js","components/cards/WelcomePage.jsx","components/cards/Bottom.jsx","components/cards/About.jsx","components/cards/CardHolder.jsx","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","root","maxWidth","media","height","content","MediaCard","props","classes","Card","className","CardMedia","image","process","item","imgUrl","title","CardContent","Typography","gutterBottom","variant","component","text","color","CardActions","style","display","justifyContent","links","length","map","link","index","Button","size","key","Link","href","linkUrl","linkDesc","contentList","WelcomePage","Box","topContainerStyle","Container","alignItems","padding","fontSize","position","top","flexDirection","backgroundImage","backgroundSize","backgroundRepeat","backgroundPosition","Bottom","bgcolor","margin","About","boxHolderStyle","textStyle","letterSpacing","background","CardHolder","fixed","Grid","container","spacing","i","align","xs","sm","md","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a2af76a5.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\n// import CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Link } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 340,\r\n  },\r\n  media: {\r\n    height: \"20em\",\r\n  },\r\n  content: {\r\n    height: \"4em\",\r\n  }\r\n});\r\n\r\nexport default function MediaCard(props) {\r\n  const classes = useStyles();\r\n  // console.log(props)\r\n  // console.log(\"../../content/img/\"+props.item.imgUrl)\r\n  return (\r\n    <Card className={classes.root}>\r\n      {/* <CardActionArea> */}\r\n        <CardMedia\r\n          className={classes.media}\r\n          image={process.env.PUBLIC_URL + props.item.imgUrl}\r\n          title=\"picture\"\r\n        />\r\n        <CardContent className={classes.content}>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            {!props.text ? \"\" : props.text}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            {props.item.text}\r\n          </Typography>\r\n        </CardContent>\r\n      {/* </CardActionArea> */}\r\n      <CardActions style={{display: \"flex\", justifyContent: \"space-between\"}}>\r\n        {props.item.links.length > 0 ? props.item.links.map((link, index) => {return(\r\n          <Button size=\"small\" color=\"primary\" key={index}>\r\n            <Link href={link.linkUrl} >\r\n              <Typography >\r\n                {link.linkDesc}\r\n              </Typography>\r\n            </Link>\r\n          </Button>\r\n        )})\r\n        : <Typography>Coming soon...</Typography>}\r\n        {/* <Button size=\"small\" color=\"primary\">\r\n          Share\r\n        </Button>\r\n        <Button size=\"small\" color=\"primary\">\r\n          Learn More\r\n        </Button> */}\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}","const contentList = [\r\n  {\r\n    imgUrl: \"/img/proj/visuallab.png\",\r\n    text:\r\n      \"React-Native Expo THREE.JS(3D) interaktiv utbildningsapp där man ska hitta var i enhetscirkeln Cos eller Sin är som störst. \",\r\n    links: [\r\n      { linkUrl: \"https://github.com/alexbryw/VisualLab\", linkDesc: \"Repo\" },\r\n    ],\r\n  },\r\n  {\r\n    imgUrl: \"/img/proj/mongodb-express-react2.png\",\r\n    text:\r\n      \"Ladda upp bilder och text till en Express MongoDB REST API backend med React frontend. \",\r\n    links: [\r\n      {\r\n        linkUrl: \"https://github.com/alexbryw/mongodb-express-react\",\r\n        linkDesc: \"Repo\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    imgUrl: \"/img/proj/reactwebshop.png\",\r\n    text:\r\n      \"Web shop med cart och check out. Nya produkter sparas i LocalStorage. Byggt med React, Material-UI och TypeScript.\",\r\n    links: [\r\n      {\r\n        linkUrl: \"https://github.com/alexbryw/react-webshop\",\r\n        linkDesc: \"Repo\",\r\n      },\r\n      {\r\n        linkUrl: \"https://alexbryw.github.io/react-webshop/\",\r\n        linkDesc: \"Demo\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    imgUrl: \"/img/proj/chatapp.png\",\r\n    text:\r\n      \"Real-time server/client chat app med privata och publika rum, Express Socket.IO backend. HTML CSS JS frontend. \",\r\n    links: [\r\n      { linkUrl: \"https://github.com/alexbryw/chatApp\", linkDesc: \"Repo\" },\r\n    ],\r\n  },\r\n  {\r\n    imgUrl: \"/img/proj/weatherapp.png\",\r\n    text:\r\n      \"React TypeScript väderapp som hämtar väder data från OpenWether-API och ändrar figurens kläder efter väder.\",\r\n    links: [\r\n      {\r\n        linkUrl: \"https://github.com/alexbryw/kladereftervader\",\r\n        linkDesc: \"Repo\",\r\n      },\r\n      {\r\n        linkUrl: \"https://alexbryw.github.io/kladereftervader/\",\r\n        linkDesc: \"Demo\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    imgUrl: \"/img/proj/colorsplat.png\",\r\n    text:\r\n      \"Lokalt multiplayer spel som använder P5.JS canvas biblioteket och byggt med TypeScript OOP.\",\r\n    links: [\r\n      { linkUrl: \"https://github.com/alexbryw/ColorSplat\", linkDesc: \"Repo\" },\r\n      { linkUrl: \"https://alexbryw.github.io/ColorSplat/\", linkDesc: \"Demo\" },\r\n    ],\r\n  },\r\n  {\r\n    imgUrl: \"/img/proj/todo.png\",\r\n    text:\r\n      \"TODO app som sparar ärenden och hämtar röda dagar från svenska helgdagar API och visar dem i en responsiv kalender.\",\r\n    links: [\r\n      {\r\n        linkUrl: \"https://github.com/alexbryw/todo-calendar\",\r\n        linkDesc: \"Repo\",\r\n      },\r\n      {\r\n        linkUrl: \"https://alexbryw.github.io/todo-calendar/\",\r\n        linkDesc: \"Demo\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    imgUrl: \"/img/proj/textgame.png\",\r\n    text: \"Textspel med HTML CSS JS JS-DOC.\",\r\n    links: [\r\n      { linkUrl: \"https://github.com/alexbryw/textgame\", linkDesc: \"Repo\" },\r\n      { linkUrl: \"https://alexbryw.github.io/textgame/\", linkDesc: \"Demo\" },\r\n    ],\r\n  },\r\n  {\r\n    imgUrl: \"/img/proj/unityGame2019.jpg\",\r\n    text:\r\n      \"3D Elektronik simulator byggd med Unity3D och C# med ett SPICE bibliotek för elektroniksimuleringen.\",\r\n    links: [\r\n      // {linkUrl:\"https://www.com.com\",linkDesc: \"Com Comsson\"},\r\n      // {linkUrl:\"https://www.net.net\",linkDesc: \"Net Netsson\"}\r\n    ],\r\n  },\r\n];\r\n\r\nexport default contentList;\r\n","import React from \"react\";\r\nimport { Container, Typography, Link, Box } from \"@material-ui/core\";\r\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\r\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\r\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\r\n\r\nexport default function WelcomePage() {\r\n  return (\r\n    <Box style={topContainerStyle}>\r\n      <Typography variant={\"h2\"} color={\"primary\"}>\r\n        Portfolio\r\n      </Typography>\r\n      <Typography variant={\"h6\"}>Alexander Bryngelsson</Typography>\r\n      <Container\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          padding: \"1rem 0 0 0\",\r\n        }}\r\n      >\r\n        <Typography style={{ padding: \"1rem\" }}>\r\n          <Link href=\"https://github.com/alexbryw\">\r\n            <GitHubIcon fontSize={\"large\"} />\r\n          </Link>\r\n        </Typography>\r\n        <Typography style={{ padding: \"1rem\" }}>\r\n          <Link href=\"https://www.linkedin.com/in/alexanderbryngelsson/\">\r\n            <LinkedInIcon fontSize={\"large\"} />\r\n          </Link>\r\n        </Typography>\r\n      </Container>\r\n      <KeyboardArrowDownIcon style={{ position: \"absolute\", top: \"90vh\" }} />\r\n    </Box>\r\n  );\r\n}\r\n\r\nconst topContainerStyle = {\r\n  height: \"100vh\",\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  justifyContent: \"center\",\r\n  alignItems: \"center\",\r\n  backgroundImage: `url(${\"/portfolio/img/cloud1920.jpg\"})`,\r\n  backgroundSize: \"cover\",\r\n  backgroundRepeat: \"no-repeat\",\r\n  backgroundPosition: \"center\",\r\n  // backgroundAttachment: \"fixed\"\r\n};\r\n","import React from \"react\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\r\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\r\n\r\nimport { Box, Typography, Link } from \"@material-ui/core\";\r\n\r\nexport default function Bottom() {\r\n  return (\r\n    <Box\r\n      bgcolor={\"primary.main\"}\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        padding: \"1rem 1.25rem 2rem 1.25rem\",\r\n        margin: \"2rem 0 1rem 0\",\r\n      }}\r\n    >\r\n      <Link href=\"mailto:alex@alexanderbryngelsson.com\">\r\n        <Typography\r\n          style={{\r\n            display: \"flex\",\r\n            color: \"white\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            padding: \"0.2rem\",\r\n          }}\r\n        >\r\n          <MailIcon style={{ padding: \"0 0.3rem\" }} />\r\n          {/* alex@alexanderbryngelsson.com */}\r\n        </Typography>\r\n      </Link>\r\n      <Link href=\"https://github.com/alexbryw\">\r\n        <Typography\r\n          style={{\r\n            display: \"flex\",\r\n            color: \"white\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            padding: \"0.2rem\",\r\n          }}\r\n        >\r\n          <GitHubIcon style={{ padding: \"0 0.3rem\" }} />\r\n        </Typography>\r\n      </Link>\r\n      <Link href=\"https://www.linkedin.com/in/alexanderbryngelsson/\">\r\n        <Typography\r\n          style={{\r\n            display: \"flex\",\r\n            color: \"white\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            padding: \"0.2rem\",\r\n          }}\r\n        >\r\n          <LinkedInIcon style={{ padding: \"0 0.3rem\" }} />\r\n        </Typography>\r\n      </Link>\r\n    </Box>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Box, Typography } from \"@material-ui/core\";\r\n\r\nexport default function About() {\r\n  return (\r\n    <Box bgcolor={\"primary.main\"} style={boxHolderStyle}>\r\n      {/* <Typography style={textStyle}>\r\n            </Typography> */}\r\n      <Typography style={textStyle}>\r\n        Jag läser just nu till Front End Developer på Medieinstitutet i\r\n        Göteborg. HTML, CSS, JavaScript, TypeScript tillsammans med frameworks\r\n        som React på front-end och Node/Express/MongoDB med REST API i back-end.\r\n      </Typography>\r\n      <Typography style={textStyle}>\r\n        Jag har använt C# Unity3D i egna spelprojekt och Google Firebase\r\n        Authentication, Firestore, Cloud Functions på min praktik. Jag är\r\n        väldigt teknikintresserad, allt från webb, elektronik, raketer till ny\r\n        energiteknik och AI. Nedan finns olika kodprojekt från mitt GitHub\r\n        konto.\r\n      </Typography>\r\n    </Box>\r\n  );\r\n}\r\n\r\nconst boxHolderStyle = {\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  justifyContent: \"center\",\r\n  alignItems: \"center\",\r\n  margin: \"3rem 0 3rem 0\",\r\n  padding: \"1rem 0\",\r\n};\r\n\r\nconst textStyle = {\r\n  color: \"white\",\r\n  letterSpacing: 1.2,\r\n  // display: \"flex\",\r\n  // justifyContent: \"center\",\r\n  // alignItems: \"center\",\r\n  margin: \"0.25rem 1.25rem\",\r\n  maxWidth: \"32rem\",\r\n};\r\n","import React from 'react'\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport MediaCard from './MediaCard'\r\nimport contentList from '../../content/content'\r\n// import Navbar from './Navbar';\r\nimport WelcomePage from './WelcomePage';\r\n// import Current from './Current';\r\nimport Bottom from './Bottom'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport About from './About';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        background: \"#EAE7DC\" /*\"#E3E2DF\"*/\r\n    }\r\n})\r\nexport default function CardHolder() {\r\n    const classes = useStyles()\r\n    return(\r\n        <div className={classes.root}>\r\n            {/* <Navbar /> */}\r\n            <WelcomePage />\r\n            {/* <Current /> */}\r\n            <About/>\r\n            <Container fixed /*className={classes.root}*/>\r\n                <Grid container\r\n                    spacing={3}\r\n                    // justify=\"space-evenly\"\r\n                    // alignItems=\"center\"\r\n                >\r\n                    {contentList.map((item, i) => {\r\n                        return(\r\n                            <Grid item align=\"center\" xs={12} sm={6} md={4} key={i}>\r\n                                <MediaCard item={item} key={i}/>\r\n                            </Grid>\r\n                        )\r\n                    })}\r\n                </Grid>\r\n            </Container>\r\n            <Bottom />\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport CardHolder from './components/cards/CardHolder';\r\n// import { ThemeProvider } from '@material-ui/core/styles'\r\n// import Theme from './components/MuiTheme'\r\n\r\nfunction App() {\r\n  return (\r\n    // <ThemeProvider theme={Theme}>\r\n      <div className=\"App\">\r\n        <CardHolder/>\r\n      </div>\r\n    // </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}